receivers:
  opencensus:
    endpoint: 0.0.0.0:55678
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:54317
      http:
        endpoint: 0.0.0.0:55681
        cors_allowed_origins:
        - http://*
        - https://*
  hostmetrics:
    collection_interval: 1m
    scrapers:
      # cpu not supported on MacOS
      # cpu:
      load:
      memory:

processors:
  memory_limiter:
    check_interval: 1s
    limit_mib: 2000
  batch:

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679

exporters:
  logging:
    loglevel: debug
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: otelcollector
  zipkin:
    endpoint: "http://zipkin-all-in-one:9411/api/v2/spans"
    format: proto
  jaeger:
    endpoint: "jaeger:14250"
    tls:
      insecure: true
  otlp/elastic:
    # Elastic APM server https endpoint without the "https://" prefix
    endpoint: "${ELASTIC_APM_SERVER_ENDPOINT}"
    tls:
      insecure: "${ELASTIC_APM_SERVER_ENDPOINT_INSECURE}"
    headers:
      # Elastic APM Server secret token
      Authorization: "Bearer ${ELASTIC_APM_SERVER_TOKEN}"
  datadog/api:
    env: ${DATADOG_ENV}
    tags: [opentemeletry:true]
    api:
      key: ${DATADOG_API_KEY}
  # https://aws-otel.github.io/docs/getting-started/x-ray
  awsxray:
    region: ${AWS_XRAY_REGION}
    endpoint: ${AWS_XRAY_ENDPOINT}
    local_mode: ${AWS_XRAY_LOCAL_MODE}
    role_arn: ${AWS_XRAY_ROLE_ARN}
  # https://aws-otel.github.io/docs/getting-started/cloudwatch-metrics
  awsemf:
  #otlp:
  #  endpoint: "tempo:55680"
  #  insecure: true
  #  headers:
  #    x-scope-orgid: foo-bar-baz

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logging, zipkin, jaeger, otlp/elastic]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [batch]
      exporters: [prometheus, otlp/elastic]
